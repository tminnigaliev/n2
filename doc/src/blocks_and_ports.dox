/*!
\page page_blocks_and_ports Блоки и порты

\section sec_blocks_and_ports Блоки и порты
Как уже можно понять из \ref sec_intro "введения", вычислительная сеть состоит из блоков-кирпичиков, соединённых связями.

Для того, чтоб блоки можно было соединять друг с другом, введено понятие портов. Порты - это входы и выходы блоков. Соответственно
они могут быть входными и выходными. Порты имеют имена для того, чтоб их можно было легко идентифицировать в пределах блока.

Когда мы соединяем два блока между собой, мы фактически соединяем их порты.

Существует 2 способа соединения портов (см. рисунок):
\li "проброс" (соединение портов одного вида с использованием методов assign_inner и assign_outer)
\li "сопряжение" (соединение портов разного вида с использованием метода pipeline).

\image html ports.png

Если рассматривать приведённый выше рисунок, то для программы нет разницы, назначаем мы D внутренним портом для E или же, наоборот,
назначаем E внешним портом для D. То же самое с операцией сопряжения.

При соединении блоков между собой действуют следующие правила:
\li при сопряжении один выходной порт может соединяться с несколькими входными
\li при сопряжении один входной порт всегда соединяется не более чем с одним выходным портом
\image html conv_diverg.png
\li при пробрасывании порты всегда соединяются один к одному
\image html conv_diverg1.png

Для того, чтоб не надо было "вручную" соединять необходимые порты разных блоков между собой (это несложно, но ухудшает читаемость кода), 
у всех блоков есть метод connect_subblock, который соединяет выбранный под-блок с другими под-блоками либо с портами данного блока в 
соответствии с выбранным правилом (пробрасывать выходы (ACT_OUTPUTS_ASSIGN), пробрасывать входы(ACT_INPUTS_ASSIGN), сопрягать порты под-блоков одного уровня один к одному с проверкой имени порта(ACT_ONE_ONE_PIPELINE), сопрягать порты один-ко-многим без проверки имени(ACT_SCATTER_DIMS_PIPELINE), сопрягать порты один-ко-многим с проверкой имени(ACT_SCATTER_PIPELINE)).
*/
